{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\huachuan\\\\Desktop\\\\uniswap-front-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 2px;\\n  background-color: ;\\n  background: linear-gradient(\\n    90deg,\\n    \",\" 0%,\\n    \",\" 80%\\n  );\\n  opacity: 0.6;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  width: calc(100% - 20px);\\n  display: flex;\\n  align-items: center;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  min-width: 20px;\\n  min-height: 20px;\\n  background-color: \",\";\\n  border-radius: 50%;\\n  color: \",\";\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  line-height: 8px;\\n  font-size: 12px;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  width: 50%;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  margin-top: 1.25rem;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import{RowBetween}from'../Row';import{AutoColumn}from'../Column';import{transparentize}from'polished';var Wrapper=styled(AutoColumn)(_templateObject());var Grouping=styled(RowBetween)(_templateObject2());var Circle=styled.div(_templateObject3(),function(_ref){var theme=_ref.theme,confirmed=_ref.confirmed,disabled=_ref.disabled;return disabled?theme.bg4:confirmed?theme.green1:theme.primary1;},function(_ref2){var theme=_ref2.theme;return theme.white;});var CircleRow=styled.div(_templateObject4());var Connector=styled.div(_templateObject5(),function(_ref3){var theme=_ref3.theme,prevConfirmed=_ref3.prevConfirmed;return transparentize(0.5,prevConfirmed?theme.green1:theme.primary1);},function(_ref4){var theme=_ref4.theme,prevConfirmed=_ref4.prevConfirmed;return prevConfirmed?theme.primary1:theme.bg4;});/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */export default function ProgressCircles(_ref5){var steps=_ref5.steps;return/*#__PURE__*/React.createElement(Wrapper,{justify:'center'},/*#__PURE__*/React.createElement(Grouping,null,steps.map(function(step,i){return/*#__PURE__*/React.createElement(CircleRow,{key:i},/*#__PURE__*/React.createElement(Circle,{confirmed:step,disabled:!steps[i-1]&&i!==0},step?'✓':i+1),/*#__PURE__*/React.createElement(Connector,{prevConfirmed:step}));}),/*#__PURE__*/React.createElement(Circle,{disabled:!steps[steps.length-1]},steps.length+1)));}","map":{"version":3,"sources":["C:/Users/huachuan/Desktop/uniswap-front-interface/src/components/ProgressSteps/index.tsx"],"names":["React","styled","RowBetween","AutoColumn","transparentize","Wrapper","Grouping","Circle","div","theme","confirmed","disabled","bg4","green1","primary1","white","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","map","step","i","length"],"mappings":"o1CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,UAAT,KAA2B,QAA3B,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,OAASC,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,OAAO,CAAGJ,MAAM,CAACE,UAAD,CAAT,mBAAb,CAIA,GAAMG,CAAAA,QAAQ,CAAGL,MAAM,CAACC,UAAD,CAAT,oBAAd,CAIA,GAAMK,CAAAA,MAAM,CAAGN,MAAM,CAACO,GAAV,oBAGU,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,SAAV,MAAUA,SAAV,CAAqBC,QAArB,MAAqBA,QAArB,OAClBA,CAAAA,QAAQ,CAAGF,KAAK,CAACG,GAAT,CAAeF,SAAS,CAAGD,KAAK,CAACI,MAAT,CAAkBJ,KAAK,CAACK,QADtC,EAHV,CAMD,mBAAGL,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACM,KAArB,EANC,CAAZ,CAcA,GAAMC,CAAAA,SAAS,CAAGf,MAAM,CAACO,GAAV,oBAAf,CAMA,GAAMS,CAAAA,SAAS,CAAGhB,MAAM,CAACO,GAAV,oBAMT,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUS,aAAV,OAAUA,aAAV,OAA8Bd,CAAAA,cAAc,CAAC,GAAD,CAAMc,aAAa,CAAGT,KAAK,CAACI,MAAT,CAAkBJ,KAAK,CAACK,QAA3C,CAA5C,EANS,CAOT,mBAAGL,CAAAA,KAAH,OAAGA,KAAH,CAAUS,aAAV,OAAUA,aAAV,OAA+BA,CAAAA,aAAa,CAAGT,KAAK,CAACK,QAAT,CAAoBL,KAAK,CAACG,GAAtE,EAPS,CAAf,CAgBA;;;;;;;;;GAUA,cAAe,SAASO,CAAAA,eAAT,OAA0D,IAA/BC,CAAAA,KAA+B,OAA/BA,KAA+B,CACvE,mBACE,oBAAC,OAAD,EAAS,OAAO,CAAE,QAAlB,eACE,oBAAC,QAAD,MACGA,KAAK,CAACC,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACtB,mBACE,oBAAC,SAAD,EAAW,GAAG,CAAEA,CAAhB,eACE,oBAAC,MAAD,EAAQ,SAAS,CAAED,IAAnB,CAAyB,QAAQ,CAAE,CAACF,KAAK,CAACG,CAAC,CAAG,CAAL,CAAN,EAAiBA,CAAC,GAAK,CAA1D,EACGD,IAAI,CAAG,GAAH,CAASC,CAAC,CAAG,CADpB,CADF,cAIE,oBAAC,SAAD,EAAW,aAAa,CAAED,IAA1B,EAJF,CADF,CAQD,CATA,CADH,cAWE,oBAAC,MAAD,EAAQ,QAAQ,CAAE,CAACF,KAAK,CAACA,KAAK,CAACI,MAAN,CAAe,CAAhB,CAAxB,EAA6CJ,KAAK,CAACI,MAAN,CAAe,CAA5D,CAXF,CADF,CADF,CAiBD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { transparentize } from 'polished'\n\nconst Wrapper = styled(AutoColumn)`\n  margin-top: 1.25rem;\n`\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.bg4 : confirmed ? theme.green1 : theme.primary1};\n  border-radius: 50%;\n  color: ${({ theme }) => theme.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background-color: ;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed }) => transparentize(0.5, prevConfirmed ? theme.green1 : theme.primary1)} 0%,\n    ${({ theme, prevConfirmed }) => (prevConfirmed ? theme.primary1 : theme.bg4)} 80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps }: ProgressCirclesProps) {\n  return (\n    <Wrapper justify={'center'}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={!steps[i - 1] && i !== 0}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={!steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}