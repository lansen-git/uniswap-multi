{"ast":null,"code":"import { ChainId, WETH } from '@uniswap/sdk';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator';\nimport UNISOCKS_ABI from '../constants/abis/unisocks.json';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from '../constants/v1';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index'; // returns null on errors\n\nfunction useContract(address, ABI, withSignerIfPossible = true) {\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useV1FactoryContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false);\n}\nexport function useV2MigratorContract() {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\nexport function useV1ExchangeContract(address, withSignerIfPossible) {\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible);\n}\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\nexport function useWETHContract(withSignerIfPossible) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\n}\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let address;\n\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.GÖRLI:\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n        break;\n    }\n  }\n\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\nexport function useMulticallContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\nexport function useSocksController() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? '0x65770b5283117639760beA3F867b69b3697a91dd' : undefined, UNISOCKS_ABI, false);\n}","map":{"version":3,"sources":["C:/Users/lansen/Desktop/Uniswap-master/uniswap-front-interface/src/hooks/useContract.ts"],"names":["ChainId","WETH","abi","IUniswapV2PairABI","useMemo","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","ERC20_BYTES32_ABI","ERC20_ABI","MIGRATOR_ABI","MIGRATOR_ADDRESS","UNISOCKS_ABI","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","V1_EXCHANGE_ABI","V1_FACTORY_ABI","V1_FACTORY_ADDRESSES","getContract","useActiveWeb3React","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useV1FactoryContract","chainId","useV2MigratorContract","useV1ExchangeContract","useTokenContract","tokenAddress","useWETHContract","useENSRegistrarContract","MAINNET","GÖRLI","ROPSTEN","RINKEBY","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useSocksController"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@uniswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { useMemo } from 'react'\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\nimport ERC20_ABI from '../constants/abis/erc20.json'\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator'\nimport UNISOCKS_ABI from '../constants/abis/unisocks.json'\nimport WETH_ABI from '../constants/abis/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from '../constants/v1'\nimport { getContract } from '../utils'\nimport { useActiveWeb3React } from './index'\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useV1FactoryContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false)\n}\n\nexport function useV2MigratorContract(): Contract | null {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true)\n}\n\nexport function useV1ExchangeContract(address?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible)\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.GÖRLI:\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n\nexport function useSocksController(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(\n    chainId === ChainId.MAINNET ? '0x65770b5283117639760beA3F867b69b3697a91dd' : undefined,\n    UNISOCKS_ABI,\n    false\n  )\n}\n"]},"metadata":{},"sourceType":"module"}