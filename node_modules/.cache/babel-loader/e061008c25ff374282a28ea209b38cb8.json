{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\huachuan\\\\Desktop\\\\uniswap-front-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useMemo}from'react';import{ThemeContext}from'styled-components';import{Link}from'react-router-dom';import{SwapPoolTabs}from'../../components/NavigationTabs';import Question from'../../components/QuestionHelper';import FullPositionCard from'../../components/PositionCard';import{useUserHasLiquidityInAllTokens}from'../../data/V1';import{useTokenBalancesWithLoadingIndicator}from'../../state/wallet/hooks';import{StyledInternalLink,TYPE}from'../../theme';import{Text}from'rebass';import{LightCard}from'../../components/Card';import{RowBetween}from'../../components/Row';import{ButtonPrimary,ButtonSecondary}from'../../components/Button';import{AutoColumn}from'../../components/Column';import{useActiveWeb3React}from'../../hooks';import{usePairs}from'../../data/Reserves';import{toV2LiquidityToken,useTrackedTokenPairs}from'../../state/user/hooks';import AppBody from'../AppBody';import{Dots}from'../../components/swap/styleds';export default function Pool(){var theme=useContext(ThemeContext);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;// fetch the user's balances of all tracked V2 LP tokens\nvar trackedTokenPairs=useTrackedTokenPairs();var tokenPairsWithLiquidityTokens=useMemo(function(){return trackedTokenPairs.map(function(tokens){return{liquidityToken:toV2LiquidityToken(tokens),tokens:tokens};});},[trackedTokenPairs]);var liquidityTokens=useMemo(function(){return tokenPairsWithLiquidityTokens.map(function(tpwlt){return tpwlt.liquidityToken;});},[tokenPairsWithLiquidityTokens]);var _useTokenBalancesWith=useTokenBalancesWithLoadingIndicator(account!==null&&account!==void 0?account:undefined,liquidityTokens),_useTokenBalancesWith2=_slicedToArray(_useTokenBalancesWith,2),v2PairsBalances=_useTokenBalancesWith2[0],fetchingV2PairBalances=_useTokenBalancesWith2[1];// fetch the reserves for all V2 pools in which the user has a balance\nvar liquidityTokensWithBalances=useMemo(function(){return tokenPairsWithLiquidityTokens.filter(function(_ref){var _v2PairsBalances$liqu;var liquidityToken=_ref.liquidityToken;return(_v2PairsBalances$liqu=v2PairsBalances[liquidityToken.address])===null||_v2PairsBalances$liqu===void 0?void 0:_v2PairsBalances$liqu.greaterThan('0');});},[tokenPairsWithLiquidityTokens,v2PairsBalances]);var v2Pairs=usePairs(liquidityTokensWithBalances.map(function(_ref2){var tokens=_ref2.tokens;return tokens;}));var v2IsLoading=fetchingV2PairBalances||(v2Pairs===null||v2Pairs===void 0?void 0:v2Pairs.length)<liquidityTokensWithBalances.length||(v2Pairs===null||v2Pairs===void 0?void 0:v2Pairs.some(function(V2Pair){return!V2Pair;}));var allV2PairsWithLiquidity=v2Pairs.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),pair=_ref4[1];return pair;}).filter(function(v2Pair){return Boolean(v2Pair);});var hasV1Liquidity=useUserHasLiquidityInAllTokens();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppBody,null,/*#__PURE__*/React.createElement(SwapPoolTabs,{active:'pool'}),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"lg\",justify:\"center\"},/*#__PURE__*/React.createElement(ButtonPrimary,{id:\"join-pool-button\",as:Link,style:{padding:16},to:\"/add/ETH\"},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:20},\"Add Liquidity\")),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"12px\",style:{width:'100%'}},/*#__PURE__*/React.createElement(RowBetween,{padding:'0 8px'},/*#__PURE__*/React.createElement(Text,{color:theme.text1,fontWeight:500},\"Your Liquidity\"),/*#__PURE__*/React.createElement(Question,{text:\"When you add liquidity, you are given pool tokens that represent your share. If you don\\u2019t see a pool you joined in this list, try importing a pool below.\"})),!account?/*#__PURE__*/React.createElement(LightCard,{padding:\"40px\"},/*#__PURE__*/React.createElement(TYPE.body,{color:theme.text3,textAlign:\"center\"},\"Connect to a wallet to view your liquidity.\")):v2IsLoading?/*#__PURE__*/React.createElement(LightCard,{padding:\"40px\"},/*#__PURE__*/React.createElement(TYPE.body,{color:theme.text3,textAlign:\"center\"},/*#__PURE__*/React.createElement(Dots,null,\"Loading\"))):(allV2PairsWithLiquidity===null||allV2PairsWithLiquidity===void 0?void 0:allV2PairsWithLiquidity.length)>0?/*#__PURE__*/React.createElement(React.Fragment,null,allV2PairsWithLiquidity.map(function(v2Pair){return/*#__PURE__*/React.createElement(FullPositionCard,{key:v2Pair.liquidityToken.address,pair:v2Pair});})):/*#__PURE__*/React.createElement(LightCard,{padding:\"40px\"},/*#__PURE__*/React.createElement(TYPE.body,{color:theme.text3,textAlign:\"center\"},\"No liquidity found.\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Text,{textAlign:\"center\",fontSize:14,style:{padding:'.5rem 0 .5rem 0'}},hasV1Liquidity?'Uniswap V1 liquidity found!':\"Don't see a pool you joined?\",' ',/*#__PURE__*/React.createElement(StyledInternalLink,{id:\"import-pool-link\",to:hasV1Liquidity?'/migrate/v1':'/find'},hasV1Liquidity?'Migrate now.':'Import it.')))))),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',alignItems:'center',marginTop:'1.5rem'}},/*#__PURE__*/React.createElement(ButtonSecondary,{as:Link,style:{width:'initial'},to:\"/migrate/v1\"},\"Migrate V1 Liquidity\")));}","map":{"version":3,"sources":["C:/Users/huachuan/Desktop/uniswap-front-interface/src/pages/Pool/index.tsx"],"names":["React","useContext","useMemo","ThemeContext","Link","SwapPoolTabs","Question","FullPositionCard","useUserHasLiquidityInAllTokens","useTokenBalancesWithLoadingIndicator","StyledInternalLink","TYPE","Text","LightCard","RowBetween","ButtonPrimary","ButtonSecondary","AutoColumn","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","AppBody","Dots","Pool","theme","account","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","undefined","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","hasV1Liquidity","padding","width","text1","text3","display","alignItems","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Pair } from '@uniswap/sdk'\nimport { Link } from 'react-router-dom'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\n\nimport Question from '../../components/QuestionHelper'\nimport FullPositionCard from '../../components/PositionCard'\nimport { useUserHasLiquidityInAllTokens } from '../../data/V1'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { StyledInternalLink, TYPE } from '../../theme'\nimport { Text } from 'rebass'\nimport { LightCard } from '../../components/Card'\nimport { RowBetween } from '../../components/Row'\nimport { ButtonPrimary, ButtonSecondary } from '../../components/Button'\nimport { AutoColumn } from '../../components/Column'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { usePairs } from '../../data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport AppBody from '../AppBody'\nimport { Dots } from '../../components/swap/styleds'\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map(tokens => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some(V2Pair => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens()\n\n  return (\n    <>\n      <AppBody>\n        <SwapPoolTabs active={'pool'} />\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <ButtonPrimary id=\"join-pool-button\" as={Link} style={{ padding: 16 }} to=\"/add/ETH\">\n            <Text fontWeight={500} fontSize={20}>\n              Add Liquidity\n            </Text>\n          </ButtonPrimary>\n\n          <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n            <RowBetween padding={'0 8px'}>\n              <Text color={theme.text1} fontWeight={500}>\n                Your Liquidity\n              </Text>\n              <Question text=\"When you add liquidity, you are given pool tokens that represent your share. If you don’t see a pool you joined in this list, try importing a pool below.\" />\n            </RowBetween>\n\n            {!account ? (\n              <LightCard padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  Connect to a wallet to view your liquidity.\n                </TYPE.body>\n              </LightCard>\n            ) : v2IsLoading ? (\n              <LightCard padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  <Dots>Loading</Dots>\n                </TYPE.body>\n              </LightCard>\n            ) : allV2PairsWithLiquidity?.length > 0 ? (\n              <>\n                {allV2PairsWithLiquidity.map(v2Pair => (\n                  <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                ))}\n              </>\n            ) : (\n              <LightCard padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  No liquidity found.\n                </TYPE.body>\n              </LightCard>\n            )}\n\n            <div>\n              <Text textAlign=\"center\" fontSize={14} style={{ padding: '.5rem 0 .5rem 0' }}>\n                {hasV1Liquidity ? 'Uniswap V1 liquidity found!' : \"Don't see a pool you joined?\"}{' '}\n                <StyledInternalLink id=\"import-pool-link\" to={hasV1Liquidity ? '/migrate/v1' : '/find'}>\n                  {hasV1Liquidity ? 'Migrate now.' : 'Import it.'}\n                </StyledInternalLink>\n              </Text>\n            </div>\n          </AutoColumn>\n        </AutoColumn>\n      </AppBody>\n\n      <div style={{ display: 'flex', alignItems: 'center', marginTop: '1.5rem' }}>\n        <ButtonSecondary as={Link} style={{ width: 'initial' }} to=\"/migrate/v1\">\n          Migrate V1 Liquidity\n        </ButtonSecondary>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}