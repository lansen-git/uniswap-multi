{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\huachuan\\\\Desktop\\\\uniswap-front-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{TradeType}from'@uniswap/sdk';import React,{useContext}from'react';import{ThemeContext}from'styled-components';import{Field}from'../../state/swap/actions';import{useUserSlippageTolerance}from'../../state/user/hooks';import{TYPE}from'../../theme';import{computeSlippageAdjustedAmounts,computeTradePriceBreakdown}from'../../utils/prices';import{AutoColumn}from'../Column';import QuestionHelper from'../QuestionHelper';import{RowBetween,RowFixed}from'../Row';import FormattedPriceImpact from'./FormattedPriceImpact';import{SectionBreak}from'./styleds';import SwapRoute from'./SwapRoute';function TradeSummary(_ref){var _ref2,_slippageAdjustedAmou,_ref3,_slippageAdjustedAmou2;var trade=_ref.trade,allowedSlippage=_ref.allowedSlippage;var theme=useContext(ThemeContext);var _computeTradePriceBre=computeTradePriceBreakdown(trade),priceImpactWithoutFee=_computeTradePriceBre.priceImpactWithoutFee,realizedLPFee=_computeTradePriceBre.realizedLPFee;var isExactIn=trade.tradeType===TradeType.EXACT_INPUT;var slippageAdjustedAmounts=computeSlippageAdjustedAmounts(trade,allowedSlippage);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoColumn,{style:{padding:'0 20px'}},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14,fontWeight:400,color:theme.text2},isExactIn?'Minimum received':'Maximum sold'),/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"})),/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{color:theme.text1,fontSize:14},isExactIn?(_ref2=\"\".concat((_slippageAdjustedAmou=slippageAdjustedAmounts[Field.OUTPUT])===null||_slippageAdjustedAmou===void 0?void 0:_slippageAdjustedAmou.toSignificant(4),\" \").concat(trade.outputAmount.currency.symbol))!==null&&_ref2!==void 0?_ref2:'-':(_ref3=\"\".concat((_slippageAdjustedAmou2=slippageAdjustedAmounts[Field.INPUT])===null||_slippageAdjustedAmou2===void 0?void 0:_slippageAdjustedAmou2.toSignificant(4),\" \").concat(trade.inputAmount.currency.symbol))!==null&&_ref3!==void 0?_ref3:'-'))),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14,fontWeight:400,color:theme.text2},\"Price Impact\"),/*#__PURE__*/React.createElement(QuestionHelper,{text:\"The difference between the market price and estimated price due to trade size.\"})),/*#__PURE__*/React.createElement(FormattedPriceImpact,{priceImpact:priceImpactWithoutFee})),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14,fontWeight:400,color:theme.text2},\"Liquidity Provider Fee\"),/*#__PURE__*/React.createElement(QuestionHelper,{text:\"A portion of each trade (0.30%) goes to liquidity providers as a protocol incentive.\"})),/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14,color:theme.text1},realizedLPFee?\"\".concat(realizedLPFee.toSignificant(4),\" \").concat(trade.inputAmount.currency.symbol):'-'))));}export function AdvancedSwapDetails(_ref4){var trade=_ref4.trade;var theme=useContext(ThemeContext);var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];var showRoute=Boolean(trade&&trade.route.path.length>2);return/*#__PURE__*/React.createElement(AutoColumn,{gap:\"md\"},trade&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TradeSummary,{trade:trade,allowedSlippage:allowedSlippage}),showRoute&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(SectionBreak,null),/*#__PURE__*/React.createElement(AutoColumn,{style:{padding:'0 24px'}},/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14,fontWeight:400,color:theme.text2},\"Route\"),/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Routing through these tokens resulted in the best price for your trade.\"})),/*#__PURE__*/React.createElement(SwapRoute,{trade:trade})))));}","map":{"version":3,"sources":["C:/Users/huachuan/Desktop/uniswap-front-interface/src/components/swap/AdvancedSwapDetails.tsx"],"names":["TradeType","React","useContext","ThemeContext","Field","useUserSlippageTolerance","TYPE","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","AutoColumn","QuestionHelper","RowBetween","RowFixed","FormattedPriceImpact","SectionBreak","SwapRoute","TradeSummary","trade","allowedSlippage","theme","priceImpactWithoutFee","realizedLPFee","isExactIn","tradeType","EXACT_INPUT","slippageAdjustedAmounts","padding","text2","text1","OUTPUT","toSignificant","outputAmount","currency","symbol","INPUT","inputAmount","AdvancedSwapDetails","showRoute","Boolean","route","path","length"],"mappings":"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","sourcesContent":["import { Trade, TradeType } from '@uniswap/sdk'\nimport React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Field } from '../../state/swap/actions'\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\nimport { TYPE } from '../../theme'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { SectionBreak } from './styleds'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const theme = useContext(ThemeContext)\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <>\n      <AutoColumn style={{ padding: '0 20px' }}>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              {isExactIn ? 'Minimum received' : 'Maximum sold'}\n            </TYPE.black>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <TYPE.black color={theme.text1} fontSize={14}>\n              {isExactIn\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                  '-'\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\n                  '-'}\n            </TYPE.black>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              Price Impact\n            </TYPE.black>\n            <QuestionHelper text=\"The difference between the market price and estimated price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              Liquidity Provider Fee\n            </TYPE.black>\n            <QuestionHelper text=\"A portion of each trade (0.30%) goes to liquidity providers as a protocol incentive.\" />\n          </RowFixed>\n          <TYPE.black fontSize={14} color={theme.text1}>\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </TYPE.black>\n        </RowBetween>\n      </AutoColumn>\n    </>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const theme = useContext(ThemeContext)\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"md\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <SectionBreak />\n              <AutoColumn style={{ padding: '0 24px' }}>\n                <RowFixed>\n                  <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n                    Route\n                  </TYPE.black>\n                  <QuestionHelper text=\"Routing through these tokens resulted in the best price for your trade.\" />\n                </RowFixed>\n                <SwapRoute trade={trade} />\n              </AutoColumn>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}