{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lansen\\\\Desktop\\\\Uniswap-master\\\\uniswap-front-interface\\\\src\\\\components\\\\SearchModal\\\\CurrencySearchModal.tsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport useLast from '../../hooks/useLast';\nimport { useSelectedListUrl } from '../../state/lists/hooks';\nimport Modal from '../Modal';\nimport { CurrencySearch } from './CurrencySearch';\nimport ListIntroduction from './ListIntroduction';\nimport { ListSelect } from './ListSelect';\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false\n}) {\n  const [listView, setListView] = useState(false);\n  const lastOpen = useLast(isOpen);\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false);\n    }\n  }, [isOpen, lastOpen]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]);\n  const handleClickChangeList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Change Lists'\n    });\n    setListView(true);\n  }, []);\n  const handleClickBack = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Back'\n    });\n    setListView(false);\n  }, []);\n  const handleSelectListIntroduction = useCallback(() => {\n    setListView(true);\n  }, []);\n  const selectedListUrl = useSelectedListUrl();\n  const noListSelected = !selectedListUrl;\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    maxHeight: 90,\n    minHeight: listView ? 40 : noListSelected ? 0 : 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, listView ? /*#__PURE__*/React.createElement(ListSelect, {\n    onDismiss: onDismiss,\n    onBack: handleClickBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }) : noListSelected ? /*#__PURE__*/React.createElement(ListIntroduction, {\n    onSelectList: handleSelectListIntroduction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(CurrencySearch, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    onCurrencySelect: handleCurrencySelect,\n    onChangeList: handleClickChangeList,\n    selectedCurrency: selectedCurrency,\n    otherSelectedCurrency: otherSelectedCurrency,\n    showCommonBases: showCommonBases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/lansen/Desktop/Uniswap-master/uniswap-front-interface/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useEffect","useState","ReactGA","useLast","useSelectedListUrl","Modal","CurrencySearch","ListIntroduction","ListSelect","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","listView","setListView","lastOpen","handleCurrencySelect","currency","handleClickChangeList","event","category","action","handleClickBack","handleSelectListIntroduction","selectedListUrl","noListSelected"],"mappings":"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","sourcesContent":["import { Currency } from '@uniswap/sdk'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport useLast from '../../hooks/useLast'\nimport { useSelectedListUrl } from '../../state/lists/hooks'\nimport Modal from '../Modal'\nimport { CurrencySearch } from './CurrencySearch'\nimport ListIntroduction from './ListIntroduction'\nimport { ListSelect } from './ListSelect'\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false\n}: CurrencySearchModalProps) {\n  const [listView, setListView] = useState<boolean>(false)\n  const lastOpen = useLast(isOpen)\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false)\n    }\n  }, [isOpen, lastOpen])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  const handleClickChangeList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Change Lists'\n    })\n    setListView(true)\n  }, [])\n  const handleClickBack = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Back'\n    })\n    setListView(false)\n  }, [])\n  const handleSelectListIntroduction = useCallback(() => {\n    setListView(true)\n  }, [])\n\n  const selectedListUrl = useSelectedListUrl()\n  const noListSelected = !selectedListUrl\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\n      {listView ? (\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\n      ) : noListSelected ? (\n        <ListIntroduction onSelectList={handleSelectListIntroduction} />\n      ) : (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={showCommonBases}\n        />\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}